- hosts: all
  gather_hosts: false
  tasks:
    - shell: |
            echo {{ zuul.change_url }} | cut -d '/' -f 7
      register: pullid
    - debug:
        msg: "running spark cassandra demo"

    - name: "Deleted the workspace dir before build"
      shell: |
            rm -rf ~/work
      register: clean_output

    - name: "Deleted the workspace dir before build"
      shell: |
            rm -rf ~/work
      register: spark_output

    - name: Clone git repo
      git:
        repo: https://github.com/zuul-hcl-org/spark-cassandra.git
        dest: ~/work/
      when: spark_output is succeeded

    - name: Build sample project and junit reports
      shell: |
            cd ~/work/java/sbt/oss
            sbt clean assembly

      register: build_status

    - name: Push artifacts to jfrog repository
      uri:
        url: "{{ jfrog }}/artifactory/generic-local/writeRead-assembly-{{ pull_id.stdout }}.jar"
        #when: zuul_location in emea
        validate_certs: no
        method: PUT
        headers:
          X-JFrog-Art-Api: "{{ jfrog_api_token }}"
        src: ~/work/java/sbt/oss/target/writeRead-assembly-0.1.jar
        status_code: 201
        remote_src: yes
      when: build_status is succeeded

    - name: Pull the jar file
      get_url:
        url: {{ jfrog }}/artifactory/generic-local/writeRead-assembly-{{ pull_id.stdout }}.jar
        dest: /home/ec2-user/work/
      when: build_status is succeeded

    - name: build the docker file
      shell: |
            echo "FROM {{ jfrog }}/docker-local/spark:v2.4.3" > /home/ec2-user/work/Dockerfile
            echo "COPY writeRead-assembly-0.1.jar       //opt/spark/writeRead-assembly-0.1.jar" >> /home/ec2-user/work/Dockerfile
      when: build_status is succeeded
