- shell: |
        echo {{ zuul.change_url }} | cut -d '/' -f 7
  register: pullid
  
- name: "execute steps for nafta "
  shell: |
         curl -s curl https://github.com/{{ zuul.project.name }}/blob/{{ branch_name }}/check_location | grep 'js-file-line">'   | sed s/\<.*le-line\"\>//g | sed s/\<.*td\>//g | sed 's/ //g'|grep -i InputScenario2Data  | cut -d "=" -f 2
  register: InputScenario2Data_output
- set_fact:
    InputScenario2Data: "{{ InputScenario2Data_output.stdout }}"
- shell: |
         curl -s curl https://github.com/{{ zuul.project.name }}/blob/{{ branch_name }}/check_location | grep 'js-file-line">'   | sed s/\<.*le-line\"\>//g | sed s/\<.*td\>//g | sed 's/ //g'|grep -i Nafta_artifactlocation  | cut -d "=" -f 2
  register: jfrog_artifactlocation_nafta_output
- set_fact:
    jfrog_artifactlocation_nafta: "{{ jfrog_artifactlocation_nafta_output.stdout }}"
  name: "Check the docker url"
- shell: |
        echo {{ jfrog_artifactlocation_nafta }}  | awk -F[/:] '{print $4}'
  register: jfrog_docker
- set_fact:
    jfrog_docker_nafta: "{{ jfrog_docker.stdout }}"   
       
- name: Pull the jar file
  get_url:
     url: "{{ jfrog_artifactlocation_nafta }}/artifactory/generic-local/writeRead-assembly-{{ pullid.stdout }}.jar"
     dest: /home/ec2-user/spark_work/
     

- name: build the docker file
  shell: |
        cd /home/ec2-user/spark_work/
        cp -r {{ InputScenario2Data }}/* .
        echo "FROM {{ jfrog_docker_nafta }}:9083/docker-local/spark:v2.4.3" > /home/ec2-user/spark_work/Dockerfile_{{pullid.stdout}}
        echo "COPY writeRead-assembly-{{ pullid.stdout }}.jar   //opt/spark/writeRead-assembly-0.1.jar" >> /home/ec2-user/spark_work/Dockerfile_{{pullid.stdout}}
        echo "ADD input/*.* /opt/spark/" >> /home/ec2-user/spark_work/Dockerfile_{{pullid.stdout}}
     
     
- name: build the docker image 
  shell: |
       cd /home/ec2-user/spark_work/
       docker build -t {{ jfrog_docker_nafta }}:9083/docker-local/cassandra_example:v{{ pullid.stdout }} -f Dockerfile_{{ pullid.stdout }} .	
  register: docker_build             

- name: push the docker images 
  shell: |
        docker login -u admin -p password {{ jfrog_docker }}:9083
        docker push {{ jfrog_docker_nafta }}:9083/docker-local/cassandra_example:v{{ pullid.stdout }}
  when: docker_build is succeeded
